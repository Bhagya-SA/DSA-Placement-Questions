import java.util.*;

public class LevelOrderTraversal {
    public static void levelOrder(TreeNode root){
        if(root == null) return;
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        while(!q.isEmpty()){
            TreeNode node = q.poll();
            System.out.print(node.val + " ");
            if(node.left != null) q.offer(node.left);
            if(node.right != null) q.offer(node.right);
        }
    }

    public static void main(String[] args){
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);
        root.left.left = new TreeNode(4);
        root.left.right = new TreeNode(5);
        System.out.print("Level Order: ");
        levelOrder(root);
    }
}

/*
Optimal Approach: BFS using Queue
Time Complexity: O(n)
Space Complexity: O(w) - w = max width of tree
*/
